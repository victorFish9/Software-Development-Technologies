### Remember to select the proper rest client environment

### Reset database in admin env before performing other tests
GET {{host}}/resetDatabase
Authorization: Basic {{token}}

### 1. Get all equipments to have a general overview
GET {{host}}/equipment
Authorization: Basic {{token}}

### Initial setup: Set the nextId after Testdata Reset
@nextId=2030

### 2. Get one by id (use a known id for this test to ensure retrieval by ID works)
GET {{host}}/equipment/2001
Authorization: Basic {{token}}

### 3. Create new equipment (Assume that the created equipment gets `nextId` or should be replaced with a returned ID to continue with the test)
POST {{host}}/equipment
Authorization: Basic {{token}}
Content-Type: application/json

{
    "name": "New 2",
    "priority": 70,
    "description": "New description",
    "isMovable": 1
}

### 4. Confirm the newly created equipment using the `nextId` (This will verify creation was successful and the correct ID was assigned)
GET {{host}}/equipment/{{nextId}}
Authorization: Basic {{token}}

### 5. Update the equipment using `nextId` (Test the update operation)
PUT {{host}}/equipment/{{nextId}}
Authorization: Basic {{token}}
Content-Type: application/json

{
    "id": {{nextId}},
    "name": "Updated name",
    "priority": 101,
    "description": "Updated description",
    "isMovable": 1
}

### 6. Confirm the update (Ensure the update took effect)
GET {{host}}/equipment/{{nextId}}
Authorization: Basic {{token}}

### 7. Delete the equipment (Test the delete operation)
DELETE {{host}}/equipment/{{nextId}}
Authorization: Basic {{token}}

### 8. Confirm deletion (Trying to retrieve it should result in an empty array)
GET {{host}}/equipment/{{nextId}}
Authorization: Basic {{token}}
